(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{209:function(t,a,s){"use strict";s.r(a);var e=s(2),n=Object(e.a)({},function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"前言"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#前言","aria-hidden":"true"}},[t._v("#")]),t._v(" 前言")]),t._v(" "),s("p",[t._v('<p>已经有阮一峰老师的<a href="http://www.ruanyifeng.com/blog/2017/12/travis_ci_tutorial.html" target="_blank">持续集成服务 Travis CI 教程</a>，为什么还要写这篇文章？</p><p>原因有二：</p><ol start="1"><li>文章内容有些过时</li><li>文章覆盖度不够，有些实践细节没写出来</li></ol><p>由于以上原因，纵然可以笔者很快在Github集成Travis CI并成功构建，但在发布时却踩了一些坑，一直失败，折腾一波才终于发布成功。故写下此文，旨在\b补充更多的细节，帮助他人少走弯路。</p>')]),t._v(" "),s("h1",{attrs:{id:"正文"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#正文","aria-hidden":"true"}},[t._v("#")]),t._v(" 正文")]),t._v(" "),s("h2",{attrs:{id:"免费购买travis-ci应用"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#免费购买travis-ci应用","aria-hidden":"true"}},[t._v("#")]),t._v(" 免费购买Travis CI应用")]),t._v(" "),s("p",[t._v('<p>点击 <a href="https://github.com/marketplace/travis-ci" target="_blank">https://github.com/marketplace/travis-ci</a>，登录后免费购买(<span>开源项目集成Travis CI不收费)</span>。</p>')]),t._v(" "),s("h2",{attrs:{id:"选择关联仓库"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#选择关联仓库","aria-hidden":"true"}},[t._v("#")]),t._v(" 选择关联仓库")]),t._v(" "),s("p",[t._v('<p>选择个人或组织名下需要关联<span>Travis CI的</span>Github仓库。</p><p>已经设置过的，想进行修改，可以在Github的 Personal settings-> Applications 中进入。</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552699916365-0a309745-c830-480e-8c8f-58b2dde3f7bc.png#align=left&display=inline&height=285&originHeight=381&originWidth=227&size=0&status=done&width=170" style="max-width: 600px; width: 170px;"><img alt="image.png" title="image.png" src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552695398638-13ec5516-3002-4a74-bf08-099b32f2b612.png#align=left&display=inline&height=259&name=image.png&originHeight=958&originWidth=1992&size=408088&status=done&width=538" style="max-width: 600px; width: 538px;"></p><p><br><img alt="image.png" title="image.png" src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552695750384-cc7d516e-c10d-4553-8811-84ac13f3ee4f.png#align=left&display=inline&height=316&name=image.png&originHeight=632&originWidth=1340&size=207631&status=done&width=670" style="max-width: 600px; width: 670px;"></p>')]),t._v(" "),s("h2",{attrs:{id:"编写ci文件"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#编写ci文件","aria-hidden":"true"}},[t._v("#")]),t._v(" 编写CI文件")]),t._v(" "),s("p",[t._v("<p>在项目根目录下新建 <code>.travis.yml</code> 文件</p>")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("touch")]),t._v(" .travis.yml \n")])])]),s("p",[t._v("<p>下面是一个实际使用的例子，可以直接复制粘贴使用。</p><p>该示例包含了：</p><ul><li>指定node.js版本</li><li>使用yarn进行安装依赖及构建</li><li>对安装需要的依赖进行了缓存</li><li>设置了两个不含敏感信息的环境变量</li><li>设置了一个含有敏感信息的环境变量</li><li>把构建生成的文件部署至github pages</li></ul>")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("language")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node_js\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node_js")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" lts/*\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" API_SERVER=https"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//easy"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mock.com/mock/5c1b3895fe5907404e654045/femessage"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("mock PUBLIC_PATH=http"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("//levy.work/nuxt"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("element"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v("dashboard/\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn build\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yarn\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pages\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("skip-cleanup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keep-history")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("local-dir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dist\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("github-token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $GITHUB_TOKEN \n")])])]),s("p",[t._v("<p>下面对文件进行说明。</p>")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("language")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" node_js\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("node_js")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" lts/* \n")])])]),s("p",[t._v("<ul><li>第1行指定了构建环境为node.js</li><li>第2、3行指定使用node.js最新的LTS版本</li></ul>")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" API_SERVER=xxx PUBLIC_PATH=xxx \n")])])]),s("p",[t._v('<p>上面是设置两个环境变量。</p><p><span style="color: #F5222D;">注意，一次构建中传多个环境变量，</span><span style="color: #F5222D;">必须写在同一行，使用空格分开。</span></p>')]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("env")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" API_SERVER=xxx \n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" PUBLIC_PATH=xxx \n")])])]),s("p",[t._v("<p><span>如果写成上面的形式，则会变成两个构建，每一个构建中只有一个环境变量。</span></p>")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("install")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("script")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("-")]),t._v(" yarn build\n"),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("cache")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" yarn \n")])])]),s("p",[t._v("<p>上面指定使用yarn进行安装依赖，安装好后执行 <code>yarn build</code> 命令; 为yarn的依赖加速安装，开启了缓存。</p><p>下面是最关键的部署配置。</p>")]),t._v(" "),s("div",{staticClass:"language-yaml extra-class"},[s("pre",{pre:!0,attrs:{class:"language-yaml"}},[s("code",[s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("deploy")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("provider")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" pages\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("skip-cleanup")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("keep-history")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token boolean important"}},[t._v("true")]),t._v("\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("local-dir")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" dist\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("on")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n   "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("branch")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" master\n "),s("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("github-token")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" $GITHUB_TOKEN \n")])])]),s("p",[t._v('<ul><li>第2行指定部署到Github Pages，即仓库的 <code>gh-pages</code> 分支，请确保仓库的pages分支是 <code>gh-pages</code> , <a href="#b637c71e">相关操作可以看这里</a></li><li>第3行指定保留构建后的文件</li><li>第4行指定每次部署会新增一个提交记录再推送，而不是使用 <code>git push --force</code> </li><li>第5行指定构建后要部署的目录</li><li>第6、7行指<span>定</span> <code><span>master</span></code> 分支有提交行为时，将触发构建后部署</li><li>第8行是部署需要用到的<code>github-token</code>,其中<code>$GITHUB_TOKEN</code>是变量，它可以在Travis CI个人仓库的setting页里设置，<a href="#74ae38aa">相关操作可以看这里</a></li></ul>')]),t._v(" "),s("h2",{attrs:{id:"相关操作"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#相关操作","aria-hidden":"true"}},[t._v("#")]),t._v(" 相关操作")]),t._v(" "),s("h3",{attrs:{id:"github-pages"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#github-pages","aria-hidden":"true"}},[t._v("#")]),t._v(" GitHub Pages")]),t._v(" "),s("p",[t._v("<p><span>\b新建</span><code><span>gh-pages</span></code>分支，并推送至仓库</p>")]),t._v(" "),s("div",{staticClass:"language-bash extra-class"},[s("pre",{pre:!0,attrs:{class:"language-bash"}},[s("code",[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" checkout -b gh-pages\n"),s("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" push origin \n")])])]),s("p",[t._v('<p>进入仓库 Settings -> Options</p><p><br><img alt="image.png" title="image.png" src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552699596402-08204f8a-5f36-4986-abb7-e0b3eaa7ab6e.png#align=left&display=inline&height=100&name=image.png&originHeight=200&originWidth=1606&size=114488&status=done&width=803" style="max-width: 600px; width: 803px;"></p><p>往下翻看，可以看到效果</p><p><img alt="image.png" title="image.png" src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552699631605-7b018c4a-9e4f-4405-9423-9345f3ab16e3.png#align=left&display=inline&height=244&name=image.png&originHeight=488&originWidth=1380&size=278744&status=done&width=690" style="max-width: 600px; width: 690px;"></p><p><span>因为笔者自定义了域名，所以地址不是默认的 https://xxx.github.io/xxx</span></p>')]),t._v(" "),s("h3",{attrs:{id:"设置github-token"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#设置github-token","aria-hidden":"true"}},[t._v("#")]),t._v(" 设置GITHUB_TOKEN")]),t._v(" "),s("p",[t._v('<p>首先为Travis CI新建一个token</p><p><img src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552699916365-0a309745-c830-480e-8c8f-58b2dde3f7bc.png#align=left&display=inline&height=285&name=&originHeight=381&originWidth=227&status=done&width=170" style="max-width: 600px; width: 170px;"><img src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552699974567-7208da19-fdb5-4c43-b19b-61acfb4c4783.png#align=left&display=inline&height=184&name=&originHeight=184&originWidth=254&size=0&status=done&width=254" style="max-width: 600px; width: 254px;"><a href="https://help.github.com/assets/images/help/settings/personal_access_tokens_tab.png" target="_blank"></a><img src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552700133575-16c48b5a-fe9c-4eb4-a6ab-cf4e066d5881.png#align=left&display=inline&height=204&name=&originHeight=204&originWidth=262&size=0&status=done&width=262" style="max-width: 600px; width: 262px;"></p><p>点击生成新token</p><p><a href="https://help.github.com/assets/images/help/settings/generate_new_token.png" target="_blank"></a><img src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552700229186-44a679d9-254f-4377-94bd-ac115e345cec.png#align=left&display=inline&height=64&name=&originHeight=82&originWidth=961&size=0&status=done&width=746" style="max-width: 600px; width: 746px;"></p><p>设置权限</p><p><br><img alt="image.png" title="image.png" src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552700351510-569e8cad-ecc4-420a-a7c0-d94cf87a6632.png#align=left&display=inline&height=516&name=image.png&originHeight=1032&originWidth=1228&size=598324&status=done&width=614" style="max-width: 600px; width: 614px;"></p><p>复制生成的token。(记得先不要刷新或离开当前页面，否则token就看不见了，只能重新生成)</p><p>登录Travis CI, 进入要集成的项目设置页。</p><p><br><img alt="image.png" title="image.png" src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552700606763-80259a22-e30e-474e-ae50-c31958367f1f.png#align=left&display=inline&height=348&name=image.png&originHeight=696&originWidth=2540&size=434279&status=done&width=1270" style="max-width: 600px; width: 1270px;"></p><p>添加环境变量<code><span>GITHUB_TOKEN</span></code></p><p><span style="color: #F5222D;">注意，这里的环境变量是通过bash设置、并在.yml里读取的，所以变量名是大写加下划线形式，这是bash的最佳实践，千万别写成</span><code><span>github-token</span></code></p><p><img alt="image.png" title="image.png" src="https://cdn.nlark.com/yuque/0/2019/png/160590/1552700692945-dc8dc616-6829-4c2b-afae-9150ba001398.png#align=left&display=inline&height=300&name=image.png&originHeight=600&originWidth=1906&size=226858&status=done&width=953" style="max-width: 600px; width: 953px;"></p><p>好了，在master分支上推送一下，试试新鲜出炉的CI服务吧！</p>')])])},[],!1,null,null,null);a.default=n.exports}}]);