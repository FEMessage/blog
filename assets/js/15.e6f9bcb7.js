(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{215:function(t,a,r){"use strict";r.r(a);var e=r(2),s=Object(e.a)({},function(){var t=this,a=t.$createElement,r=t._self._c||a;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("h1",{attrs:{id:"git最佳实践"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#git最佳实践","aria-hidden":"true"}},[t._v("#")]),t._v(" GIT最佳实践")]),t._v(" "),r("h2",{attrs:{id:"一个功能对应一个分支"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#一个功能对应一个分支","aria-hidden":"true"}},[t._v("#")]),t._v(" 一个功能对应一个分支")]),t._v(" "),r("p",[t._v("下面是好的示例： 格式化代码，也应该单独一个PR\n"),r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006y8mN6gy1g6megbpz6qj315a0le77p.jpg",alt:"好的示例"}})]),t._v(" "),r("p",[t._v("下面是不好的示例：因为一个PR修改了太多内容")]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006y8mN6gy1g6md819j8qj312y0dajsm.jpg",alt:"不好的示例"}})]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006y8mN6gy1g6md86mgeuj312w0aegmx.jpg",alt:"关闭理由"}})]),t._v(" "),r("h2",{attrs:{id:"使用正确的标题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用正确的标题","aria-hidden":"true"}},[t._v("#")]),t._v(" 使用正确的标题")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#commits",target:"_blank",rel:"noopener noreferrer"}},[t._v("相关规范看这里"),r("OutboundLink")],1)]),t._v(" "),r("p",[t._v("另外，请回答：出于什么原因需要进行这次修改？具体改动了些什么？")]),t._v(" "),r("p",[t._v("使用一定要使用现在时祈使句（例如要使用 change ，而不是 changed 或 changes）。")]),t._v(" "),r("p",[t._v("优先使用正面肯定语句，而不是否定句。")]),t._v(" "),r("p",[t._v("好的示例："),r("code",[t._v("docs: extraQuery 的正确使用方法")])]),t._v(" "),r("p",[t._v("不好的示例："),r("code",[t._v("docs: 更新不直观的例子")])]),t._v(" "),r("p",[r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006y8mN6gy1g6mdn22hcsj312207uabq.jpg",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"根据模板填写pr描述"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#根据模板填写pr描述","aria-hidden":"true"}},[t._v("#")]),t._v(" 根据模板填写PR描述")]),t._v(" "),r("p",[t._v("这是我们 Github 的 PR 模板，融合了我们的最佳实践\n"),r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006y8mN6gy1g6mdpi1qp8j30zc0u0774.jpg",alt:"image-20190513142522614"}})]),t._v(" "),r("p",[t._v("下面是实际的好的例子\n"),r("img",{attrs:{src:"https://tva1.sinaimg.cn/large/006y8mN6gy1g6mdrclpxij30xr0u00zm.jpg",alt:""}})]),t._v(" "),r("h2",{attrs:{id:"bug修复"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#bug修复","aria-hidden":"true"}},[t._v("#")]),t._v(" bug修复")]),t._v(" "),r("p",[t._v("提交格式为："),r("br"),t._v("fix #${bugId} ${bugMsg}")]),t._v(" "),r("p",[t._v("例如："),r("br"),t._v("fix #37 数据源管理-查看表字段，输入表名称进行查询后，需要点击两次返回按钮才能返回")]),t._v(" "),r("h2",{attrs:{id:"精简提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#精简提交","aria-hidden":"true"}},[t._v("#")]),t._v(" 精简提交")]),t._v(" "),r("p",[t._v("一次只提交一个“瘦”的功能，同时只包含相关改动文件。例如，对于两个错误的修复应该进行两次不同的提交。")]),t._v(" "),r("p",[t._v("如果发现写提交信息时，需要写两点以上;  则需要拆分提交。")]),t._v(" "),r("p",[t._v("如果提交信息里含有“并且”，“而且”，“同时”等字眼时，也需要考虑是否要拆分提交。")]),t._v(" "),r("p",[t._v("有个衡量的标准是：查看某个文件的提交历史，如果其所有提交信息的描述都是与此文件相关的，那就是符合规范的; 如果发现某次的提交信息与本文件无关，则说明提交的时候误操作了。")]),t._v(" "),r("p",[t._v("精简的提交可以让其他的开发团队人员更简单地明白其改动的用义。如果其中一次提交的改动出现了问题，也可以方便地回滚到改动之前的状态。借助暂存功能来标记相关的改动文件，Git 可以为你打造出非常精准的提交。")]),t._v(" "),r("h2",{attrs:{id:"频繁提交"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#频繁提交","aria-hidden":"true"}},[t._v("#")]),t._v(" 频繁提交")]),t._v(" "),r("p",[t._v("一次提交应只对应一个“瘦”的功能。从而达到频繁提交的目标。")]),t._v(" "),r("p",[t._v("经常性地提交改动可以确保不会出现特别庞大的提交，同时也可以比较精准地对应到所需要的改动上。")]),t._v(" "),r("p",[t._v("此外，通过频繁地提交也可以比较快速地和其他开发人员来共享你的改动。同样也会避免在整合代码时出现过多的合并冲突。相反的，非常庞大的提交会加大整合代码时出现冲突的风险，解决这些冲突也会非常复杂。")]),t._v(" "),r("h2",{attrs:{id:"不要提交不完整的改动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不要提交不完整的改动","aria-hidden":"true"}},[t._v("#")]),t._v(" 不要提交不完整的改动")]),t._v(" "),r("p",[t._v("虽然原则上来说不要提交一些还没有完成的改动，但是对于一个非常庞大的新功能来说，也并不意味着你必须整体完成这个功能后才可以提交。恰恰相反，你必须把那些改动正确地分割成一些有意义的逻辑模块来进行频繁地提交。")]),t._v(" "),r("p",[t._v("如果你仅仅是因为急着想要下班，或者是想要得到一个干净的工作副本（比如想要切换到另一个分支上），你可以利用 Git 所提供的储藏（Stash）功能来解决这些问题。切记不要把那些不完整的改动提交到仓库中。")]),t._v(" "),r("h2",{attrs:{id:"提交前测试那些改动"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#提交前测试那些改动","aria-hidden":"true"}},[t._v("#")]),t._v(" 提交前测试那些改动")]),t._v(" "),r("p",[t._v("不要理所当然地认为自己完成的改动都是正确的。")]),t._v(" "),r("p",[t._v("所有的改动一定要通过彻底地测试才表示它真正地被完成了。尽管这些改动可能仅仅是提交到了你的本地仓库中，只有你自己才能看到，但完整的测试同样是非常重要的，因为这些代码可能之后会被推送和共享到远程给其他的开发人员。")]),t._v(" "),r("h2",{attrs:{id:"版本控制不是备份系统"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#版本控制不是备份系统","aria-hidden":"true"}},[t._v("#")]),t._v(" 版本控制不是备份系统")]),t._v(" "),r("p",[t._v("版本控制系统具有一个很强大的附带功能，那就是服务器端的备份功能。但是千万不要把 VCS 仅仅当成一个备份系统。特别需要注意的是，只能提交那些有意义的改动。VCS 不是用来备份文件用的。（请参阅 <提交对映改动>）")]),t._v(" "),r("h2",{attrs:{id:"遵循一个工作流程"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#遵循一个工作流程","aria-hidden":"true"}},[t._v("#")]),t._v(" 遵循一个工作流程")]),t._v(" "),r("p",[t._v("Git 可以支持很多不同的工作流程：长期分支、功能分支、合并以及 rebase、git-flow 等等。选择什么样的开发流程要取决如下一些因素：项目开发的类型，部署模式和（可能是最重要的）开发团队成员的个人习惯。不管怎样，选择什么样的流程都需要得到所有开发成员的一致认可，并且一直遵循它。")]),t._v(" "),r("h2",{attrs:{id:"学习资源"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#学习资源","aria-hidden":"true"}},[t._v("#")]),t._v(" 学习资源")]),t._v(" "),r("p",[r("a",{attrs:{href:"https://git.oschina.net/progit/",target:"_blank",rel:"noopener noreferrer"}},[t._v("Pro Git"),r("OutboundLink")],1),r("br"),r("a",{attrs:{href:"https://learngitbranching.js.org/?NODEMO",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://learngitbranching.js.org"),r("OutboundLink")],1)])])},[],!1,null,null,null);a.default=s.exports}}]);